下载
http://nginx.org/en/download.html
有window与linux版


淘宝的 Tengine Web服务器也开源,基于nginx1.0.10

window下安装
cd /d D:\devtools\nginx
unzip nginx-1.0.11.zip
ren nginx-1.0.11 nginx
cd nginx
//启动
start nginx

可将 D:\devtools\nginx配置在path中,在cmd控制台中可使用如下命令
命令:
nginx -s [ stop | quit | reopen | reload ]


linux系统安装
tar -xvf nginx-1.0.11.tar.gz
cd  nginx-1.0.11
./configure --prefix=/home/admin/xiaoxiang/nginx  && make && make install

出现./configure: error: the HTTP rewrite module requires the PCRE library错误
用root用户安装
yum  install pcre-devel

如果不是以root用户启动nginx,需改变nginx的使用方式,使用得它以root用户的权限来启动它
cd /home/admin/xiaoxiang/nginx
使用root用户
chown root:admin sbin/nginx
chmod 4755 sbin/nginx

启动
./sbin/nginx

测试是否成功
http://www.xiaoxiang.com
如果出现403
nginx.conf  中加入用户定义
第一行加入user  admin;

如要指定自定义的配置文件
./sbin/nginx  -c /home/admin/xiaoxiang/nginx/conf/nginx.conf

使用源代码进行构建
　　Nginx 使用 Unix 下常用的 './configure && make && make install' 过程来编译安装。
　　configure 脚本确定系统所具有一些特性，特别是 nginx 用来处理连接的方法。然后，它创建 Makefile 文件。
　　configure 支持下面的选项：
　　--prefix=<path> - Nginx安装路径。如果没有指定，默认为 /usr/local/nginx。
　　--sbin-path=<path> - Nginx可执行文件安装路径。只能安装时指定，如果没有指定，默认为<prefix>/sbin/nginx。
　　--conf-path=<path> - 在没有给定-c选项下默认的nginx.conf的路径。如果没有指定，默认为<prefix>/conf/nginx.conf。
　　--pid-path=<path> - 在nginx.conf中没有指定pid指令的情况下，默认的nginx.pid的路径。如果没有指定，默认为 <prefix>/logs/nginx.pid。
　　--lock-path=<path> - nginx.lock文件的路径。
　　--error-log-path=<path> - 在nginx.conf中没有指定error_log指令的情况下，默认的错误日志的路径。如果没有指定，默认为 <prefix>/logs/error.log。
　　--http-log-path=<path> - 在nginx.conf中没有指定access_log指令的情况下，默认的访问日志的路径。如果没有指定，默认为 <prefix>/logs/access.log。
　　--user=<user> - 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的用户。如果没有指定，默认为 nobody。
　　--group=<group> - 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的组。如果没有指定，默认为 nobody。
　　--builddir=DIR - 指定编译的目录
　　--with-rtsig_module - 启用 rtsig 模块
　　--with-select_module --without-select_module - Whether or not to enable the select module. This module is enabled by default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure.
　　//允许或不允许开启SELECT模式，如果 configure 没有找到更合适的模式，比如：kqueue(sun os),epoll (linux kenel 2.6+), rtsig(实时信号)或者/dev/poll(一种类似select的模式，底层实现与SELECT基本相 同，都是采用轮训方法) SELECT模式将是默认安装模式
　　--with-poll_module --without-poll_module - Whether or not to enable the poll module. This module is enabled by default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure.
　　--with-http_ssl_module - Enable ngx_http_ssl_module. Enables SSL support and the ability to handle HTTPS requests. Requires OpenSSL. On Debian, this is libssl-dev.
　　//开启HTTP SSL模块，使NGINX可以支持HTTPS请求。这个模块需要已经安装了OPENSSL，在DEBIAN上是libssl
　　--with-http_realip_module - 启用 ngx_http_realip_module
　　--with-http_addition_module - 启用 ngx_http_addition_module
　　--with-http_sub_module - 启用 ngx_http_sub_module
　　--with-http_dav_module - 启用 ngx_http_dav_module
　　--with-http_flv_module - 启用 ngx_http_flv_module
　　--with-http_stub_status_module - 启用 "server status" 页
　　--without-http_charset_module - 禁用 ngx_http_charset_module
　　--without-http_gzip_module - 禁用 ngx_http_gzip_module. 如果启用，需要 zlib 。
　　--without-http_ssi_module - 禁用 ngx_http_ssi_module
　　--without-http_userid_module - 禁用 ngx_http_userid_module
　　--without-http_access_module - 禁用 ngx_http_access_module
　　--without-http_auth_basic_module - 禁用 ngx_http_auth_basic_module
　　--without-http_autoindex_module - 禁用 ngx_http_autoindex_module
　　--without-http_geo_module - 禁用 ngx_http_geo_module
　　--without-http_map_module - 禁用 ngx_http_map_module
　　--without-http_referer_module - 禁用 ngx_http_referer_module
　　--without-http_rewrite_module - 禁用 ngx_http_rewrite_module. 如果启用需要 PCRE 。
　　--without-http_proxy_module - 禁用 ngx_http_proxy_module
　　--without-http_fastcgi_module - 禁用 ngx_http_fastcgi_module
　　--without-http_memcached_module - 禁用 ngx_http_memcached_module
　　--without-http_limit_zone_module - 禁用 ngx_http_limit_zone_module
　　--without-http_empty_gif_module - 禁用 ngx_http_empty_gif_module
　　--without-http_browser_module - 禁用 ngx_http_browser_module
　　--without-http_upstream_ip_hash_module - 禁用 ngx_http_upstream_ip_hash_module
　　--with-http_perl_module - 启用 ngx_http_perl_module
　　--with-perl_modules_path=PATH - 指定 perl 模块的路径
　　--with-perl=PATH - 指定 perl 执行文件的路径
　　--http-log-path=PATH - Set path to the http access log
　　--http-client-body-temp-path=PATH - Set path to the http client request body temporary files
　　--http-proxy-temp-path=PATH - Set path to the http proxy temporary files
　　--http-fastcgi-temp-path=PATH - Set path to the http fastcgi temporary files
　　--without-http - 禁用 HTTP server
　　--with-mail - 启用 IMAP4/POP3/SMTP 代理模块
　　--with-mail_ssl_module - 启用 ngx_mail_ssl_module
　　--with-cc=PATH - 指定 C 编译器的路径
　　--with-cpp=PATH - 指定 C 预处理器的路径
　　--with-cc-opt=OPTIONS - Additional parameters which will be added to the variable CFLAGS. With the use of the system library PCRE in FreeBSD, it is necessary to indicate --with-cc-opt="-I /usr/local/include". If we are using select() and it is necessary to increase the number of file descriptors, then this also can be assigned here: --with-cc-opt="-D FD_SETSIZE=2048".
　　--with-ld-opt=OPTIONS - Additional parameters passed to the linker. With the use of the system library PCRE in FreeBSD, it is necessary to indicate --with-ld-opt="-L /usr/local/lib".
　　--with-cpu-opt=CPU - 为特定的 CPU 编译，有效的值包括：pentium, pentiumpro, pentium3, pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64
　　--without-pcre - 禁止 PCRE 库的使用。同时也会禁止 HTTP rewrite 模块。在 "location" 配置指令中的正则表达式也需要 PCRE 。
　　--with-pcre=DIR - 指定 PCRE 库的源代码的路径。
　　--with-pcre-opt=OPTIONS - Set additional options for PCRE building.
　　--with-md5=DIR - Set path to md5 library sources.
　　--with-md5-opt=OPTIONS - Set additional options for md5 building.
　　--with-md5-asm - Use md5 assembler sources.
　　--with-sha1=DIR - Set path to sha1 library sources.
　　--with-sha1-opt=OPTIONS - Set additional options for sha1 building.
　　--with-sha1-asm - Use sha1 assembler sources.
　　--with-zlib=DIR - Set path to zlib library sources.
　　--with-zlib-opt=OPTIONS - Set additional options for zlib building.
　　--with-zlib-asm=CPU - Use zlib assembler sources optimized for specified CPU, valid values are: pentium, pentiumpro
　　--with-openssl=DIR - Set path to OpenSSL library sources
　　--with-openssl-opt=OPTIONS - Set additional options for OpenSSL building
　　--with-debug - 启用调试日志
　　--add-module=PATH - Add in a third-party module found in directory PATH
　　在不同版本间，选项可能会有些许变化，请总是使用 ./configure --help 命令来检查一下当前的选项列表

示例 (最好能在同一行)
　　./configure \
　　--sbin-path=/usr/local/nginx/nginx \
　　--conf-path=/usr/local/nginx/nginx.conf \
　　--pid-path=/usr/local/nginx/nginx.pid \
　　--with-http_ssl_module \
　　--with-pcre=../pcre-4.4 \
　　--with-zlib=../zlib-1.1.3
　　Example on Ubuntu/debian with libgcrypt11-dev, libpcre3-dev and libssl-dev installed (choose EITHER --with-md5 OR --with-sha1, but not both; on debian and ubuntu, they should both point to /usr/lib)
　　./configure --with-openssl=/usr/lib/ssl/ --with-md5=/usr/lib
　　An Ubuntu Edgy .deb for version 0.5.2 can be found here: nginx_0.5.2-1_i386.deb.
　　(NOTE: According to an October 2006 message md5 was used in a now broken http cache module and sha1 is used in an incomplete mysql library module and so are currently not needed.)


502 Bad Gateway 错误
是因为后台的如jetty出现的问题,如端口配置错误

Nginx出现“413 Request Entity Too Large”错误
client_max_body_size 800m;
