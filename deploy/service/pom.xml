<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.xiaoxiang</groupId>
        <artifactId>deploy</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <!--模块信息-->
    <groupId>com.xiaoxiang</groupId>
    <artifactId>deploy.service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>deploy.service</name>
    <url>http://maven.apache.org</url>
    <!--属性-->
    <properties>
        <release-directory>${project.build.directory}/release/target</release-directory>
        <!-- Common libs -->
        <spring_version>2.5.6.SEC03</spring_version>
        <javassist_version>3.15.0-GA</javassist_version>
        <netty_version>3.2.5.Final</netty_version>
        <mina_version>1.1.7</mina_version>
        <grizzly_version>2.1.4</grizzly_version>
        <httpclient_version>4.1.2</httpclient_version>
        <hessian_lite_version>3.2.1</hessian_lite_version>
        <xstream_version>1.4.1</xstream_version>
        <fastjson_version>1.1.8</fastjson_version>
        <bsf_version>3.1</bsf_version>
        <zookeeper_version>3.3.3</zookeeper_version>
        <jfreechart_version>1.0.13</jfreechart_version>
        <hessian_version>4.0.7</hessian_version>
        <servlet_version>2.5</servlet_version>
        <jetty_version>6.1.26</jetty_version>
        <!-- Log libs -->
        <log4j_version>1.2.16</log4j_version>
        <slf4j_version>1.6.2</slf4j_version>
        <!-- Test libs -->
        <junit_version>4.10</junit_version>
        <easymock_version>3.0</easymock_version>
        <jmockit_version>0.999.8</jmockit_version>
        <!-- Build args -->
        <argline>-Xms512m -Xmx512m</argline>
        <skip_maven_deploy>false</skip_maven_deploy>
        <updateReleaseInfo>true</updateReleaseInfo>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.xiaoxiang</groupId>
            <artifactId>service</artifactId>
            <version>${service-version}</version>
        </dependency>
        <!--dubbo-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
        </dependency>
        <!--本地引入 要放到后面,不然common-pool版本会有问题-->
        <!--用于监控sql性能-->
        <dependency>
            <groupId>com.irontracksql</groupId>
            <artifactId>irontracksql</artifactId>
            <version>${irontracksql-version}</version>
        </dependency>
        <!--其它依赖包-->
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>${jetty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>${zookeeper_version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>${mina_version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.grizzly</groupId>
            <artifactId>grizzly-core</artifactId>
            <version>${grizzly_version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient_version}</version>
        </dependency>
        <dependency>
            <groupId>com.caucho</groupId>
            <artifactId>hessian</artifactId>
            <version>${hessian_version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson_version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>config</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>!release</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!--测试自定义插件-->
                    <plugin>
                        <groupId>com.xiaoxiang.maven</groupId>
                        <artifactId>config-maven-plugin</artifactId>
                        <version>1.0</version>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <templateType>velocity</templateType>
                            <!-- <propertiesPath>/home/admin/autoConfig.properties</propertiesPath>-->
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>config</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Release profile仅仅把资源文件拷贝到release目录中去，不执行auto-conf -->
        <!--在部署应用之前会先执行auto-conf -->
        <!-- 使用 "mvn install -Denv=release" 来激活 release profile -->
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>release</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.1</version>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.xiaoxiang</groupId>
                                    <artifactId>service</artifactId>
                                    <version>${service-version}</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                            <silent>true</silent>
                            <includeTypes>jar</includeTypes>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <type>jar</type>
                            <outputDirectory>${project.build.directory}/release/lib</outputDirectory>
                        </configuration>
                    </plugin>
                    <!--把自己也放到lib中-->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>2.1</version>
                        <executions>
                            <execution>
                                <id>copy-jar</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.xiaoxiang</groupId>
                                            <artifactId>deploy.service</artifactId>
                                            <version>${project.version}</version>
                                            <type>jar</type>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/release/lib</outputDirectory>
                                    <overWriteReleases>false</overWriteReleases>
                                    <overWriteSnapshots>true</overWriteSnapshots>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 把资源文件打到web-deploy.jar中去 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${maven-antrun-version}</version>
                        <executions>
                            <execution>
                                <id>deploy-package</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <mkdir dir="${release-directory}" />
                                        <jar destfile="${release-directory}/web-deploy.jar">
                                            <zipfileset dir="${project.basedir}/config/META-INF" prefix="META-INF"/>
                                            <zipfileset dir="${project.basedir}">
                                                <include name="config/**"/>
                                                <exclude name="config/META-INF/**"/>
                                            </zipfileset>
                                            <zipfileset dir="${project.basedir}" filemode="755">
                                                <include name="bin/**"/>
                                            </zipfileset>
                                            <zipfileset dir="${project.build.directory}/release">
                                                <include name="lib/**" />
                                            </zipfileset>
                                        </jar>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>