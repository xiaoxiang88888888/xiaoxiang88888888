package com.xiaoxiang.model;

import com.xiaoxiang.annotation.LogAnnotation;
import com.xiaoxiang.base.BaseVO;

/**
 * ${table.name}  ${table.desc}
 *
 * @author xiaoxiang
 */
@LogAnnotation(title = "${table.desc}")
public class ${table.className} extends BaseVO<String> implements java.io.Serializable {

    #foreach($field in $!{table.fields})
    #if("$!{field.type}"=="varchar")
    /**
     * $!{field.desc}
     */
    @LogAnnotation(title = "$!{field.desc}", isPK = $!{field.pk}, orderNo = 0)
    private String $!{field.name};
    #else
   /**
    * $!{field.desc}
    */
    @LogAnnotation(title = "$!{field.desc}", isPK = $!{field.pk}, orderNo = 0)
    private Integer $!{field.name};
    #end
    #end


    public ${table.className}() {
    }

    public ${table.className}(String ${table.identifierProperty}) {
      this.${table.identifierProperty} = ${table.identifierProperty};
    }

    #foreach($field in $!{table.fields})
    #if("$!{field.type}"=="varchar")
    public String get$!{field.methodName}() {
      return this.$!{field.name};
    }

    public void set$!{field.methodName}(String $!{field.name}) {
      this.$!{field.name} = $!{field.name};
    }
    #else
    public Integer get$!{field.methodName}() {
      return this.$!{field.name};
    }

    public void set$!{field.methodName}(Integer $!{field.name}) {
      this.$!{field.name} = $!{field.name};
    }
    #end
    #end

    @Override
    public String toString() {
    return getClass().getName() + ":" + get${table.pk}();
    }

    @Override
    public boolean equals(Object obj) {
    return !(null == get${table.pk}() || null == obj) && (obj instanceof ${table.className}) && ((${table.className}) obj).get${table.pk}().equals(get${table.pk}());
    }

    @Override
    public int hashCode() {
    return null == get${table.pk}() ? super.hashCode() : get${table.pk}().hashCode();
    }


}